// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String          @id @default(auto()) @map("_id") @db.ObjectId
  username  String          @unique
  email     String          @unique
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt

  // Связь через промежуточную таблицу
  chatRooms UserChatRoom[]
  messages  Message[]
}

model ChatRoom {
  id          String          @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  createdAt   DateTime        @default(now())

  // Связь через промежуточную таблицу
  participants UserChatRoom[]
  messages     Message[]
}

model Message {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  content    String
  createdAt  DateTime @default(now())

  // Автор сообщения
  senderId   String   @db.ObjectId
  sender     User     @relation(fields: [senderId], references: [id])

  // Комната, где сообщение отправлено
  chatRoomId String   @db.ObjectId
  chatRoom   ChatRoom @relation(fields: [chatRoomId], references: [id])
}

model UserChatRoom {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  userId     String     @db.ObjectId
  chatRoomId String     @db.ObjectId

  user       User       @relation(fields: [userId], references: [id])
  chatRoom   ChatRoom   @relation(fields: [chatRoomId], references: [id])

  // Дополнительно можно добавить другие поля, например:
  joinedAt   DateTime   @default(now())
}